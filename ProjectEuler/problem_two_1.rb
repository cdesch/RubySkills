#Even Fibonacci numbers
#ProblemTwo
#Author: cj -- cjdesch.com
# This is my VERY FIRST attempt at writing Ruby so I probably won't have anything
# beautiful until after I get the basics down (loops, arrays, functions and stuff).
# I'll comeback and rewrite them to take better advantages of the language, but
# since I'm trying to do each problem in 15 minute scrum sessions to learn a ruby
# I will just shoot for solving the problem at first.


#Descrition
#Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not
# exceed four million, find the sum of the even-valued terms.


def fib(a,b,max)

  if b < max

    b = fib(b,a+b,max)
    puts b
    return b

  end

  return b

end

def fib_recur(n)
  if n == 1
    return 1
  end

  if n == 0
    return 0
  end

  return fib_recur(n - 1) + fib_recur(n-2)

end


num = fib(1,2,10)
puts num
